name: release
on:
  push:
    tags:
      - '*-?v[0-9]+*'
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.create.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
      - name: create release
        id: create
        uses: actions/create-release@v1.0.0
        with:
          tag_name: lcp-sim-${{ github.ref }}
          release_name: lcp-sim ${{ github.ref }}
          body: |
            See the assets to download lcp-sim version ${{ github.ref }}
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-tauri:
    needs: [create-release]
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install app dependencies
        run: yarn

      - name: Build and release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current package version
        id: package-version
        uses: beaconbrigade/package-json-version@v0.3

      # upload the artifacts
      - name: Upload .dmg (macos)
        if: matrix.platform == 'macos-latest'
        run: |
          gh release upload --clober ${{ github.ref_name }} src-tauri/target/release/bundle/dmg/lcp-sim_${{ steps.package-version.outputs.version }}_x64.dmg
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Upload .app (macos)
        if: matrix.platform == 'macos-latest'
        run: |
          gh release upload --clober ${{ github.ref_name }} src-tauri/target/release/bundle/macos/lcp-sim.app
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Upload .AppImage (linux)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          gh release upload --clober ${{ github.ref_name }} src-tauri/target/release/bundle/appimage/lcp-sim_${{ steps.package-version.outputs.version }}_amd64.AppImage
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Upload .deb (linux)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          gh release upload --clober ${{ github.ref_name }} src-tauri/target/release/bundle/deb/lcp-sim_${{ steps.package-version.outputs.version }}_amd64.deb
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Upload .msi (windows)
        if: matrix.platform == 'windows-latest'
        run: |
          gh release upload --clober ${{ github.ref_name }} src-tauri\target\release\bundle\msi\lcp-sim_${{ steps.package-version.outputs.version }}_x64_en-US.msi
        env:
          GH_TOKEN: ${{ github.token }}

  publish-release:
    runs-on: ubuntu-22.04
    needs: [create-release, build-tauri]
    steps:
      - uses: actions/checkout@v3
      - name: publish release
        run: |
          gh release edit ${{ github.ref_name }} --draft=false
        env:
          GH_TOKEN: ${{ github.token }}
